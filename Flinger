-- fling script!
-- UPDATES: Made fling more powerful and immediate, cleaned GUI, removed Fling All because it caused LOTS of problems.
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- ===== CONFIG =====
local BEHIND_DISTANCE = 0.001
local SPIN = Vector3.new(0,2000,0) -- Increased spin for stronger fling
local RAM_FORCE = 2000 -- Stronger push force
local SAFE_VERTICAL_OFFSET = 0

-- ===== Utilities =====
local function safeFindHRP(character)
    if not character then return nil end
    return character:FindFirstChild("HumanoidRootPart")
end

local function getTargetByQuery(query)
    if not query or query == "" then return nil end
    local q = query:lower()
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            local dn = (p.DisplayName or ""):lower()
            local un = (p.Name or ""):lower()
            if dn:find(q,1,true) or un:find(q,1,true) then
                return p
            end
        end
    end
    return nil
end

local function setAssemblyLinearVelocity(part, vec)
    if not part or not part:IsA("BasePart") then return end
    pcall(function() part.AssemblyLinearVelocity = vec end)
end

local function setAssemblyAngularVelocity(part, vec)
    if not part or not part:IsA("BasePart") then return end
    pcall(function() part.AssemblyAngularVelocity = vec end)
end

-- ===== GUI (shrunk & mobile-friendly) =====
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "RamSpinGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
screenGui.IgnoreGuiInset = true

local padding = 8

-- Main frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 280, 0, 95) -- much smaller
mainFrame.Position = UDim2.new(0.5, 0, 0.05, 0)
mainFrame.AnchorPoint = Vector2.new(0.5, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(20,20,20)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0,10)
local mainStroke = Instance.new("UIStroke", mainFrame)
mainStroke.Color = Color3.fromRGB(44,44,44)
mainStroke.Thickness = 1
mainStroke.Transparency = 0.6

-- Title bar
local titleBar = Instance.new("Frame", mainFrame)
titleBar.Size = UDim2.new(1,-padding*2,0,18)
titleBar.Position = UDim2.new(0,padding,0,padding)
titleBar.BackgroundTransparency = 1

local title = Instance.new("TextLabel", titleBar)
title.Size = UDim2.new(0.6,0,1,0)
title.BackgroundTransparency = 1
title.Text = "Fling GUI"
title.Font = Enum.Font.GothamSemibold
title.TextSize = 16
title.TextColor3 = Color3.fromRGB(240,240,240)
title.TextXAlignment = Enum.TextXAlignment.Left

local miniHint = Instance.new("TextLabel", titleBar)
miniHint.Size = UDim2.new(0.4,0,1,0)
miniHint.Position = UDim2.new(0.6,0,0,0)
miniHint.BackgroundTransparency = 1
miniHint.Text = "RightAlt to Toggle"
miniHint.Font = Enum.Font.Gotham
miniHint.TextSize = 10
miniHint.TextColor3 = Color3.fromRGB(160,160,160)
miniHint.TextXAlignment = Enum.TextXAlignment.Right

-- Input row
local row = Instance.new("Frame", mainFrame)
row.Size = UDim2.new(1,-padding*2,0,36)
row.Position = UDim2.new(0,padding,0,padding+20)
row.BackgroundTransparency = 1

local inputBox = Instance.new("TextBox", row)
inputBox.Size = UDim2.new(1,-110,1,0)
inputBox.Position = UDim2.new(0,0,0,0)
inputBox.BackgroundColor3 = Color3.fromRGB(32,32,32)
inputBox.TextColor3 = Color3.fromRGB(245,245,245)
inputBox.PlaceholderText = "Target Name"
inputBox.ClearTextOnFocus = true
inputBox.Font = Enum.Font.Gotham
inputBox.TextSize = 13
inputBox.TextXAlignment = Enum.TextXAlignment.Left
Instance.new("UICorner", inputBox).CornerRadius = UDim.new(0,6)
local inputPadding = Instance.new("UIPadding", inputBox)
inputPadding.PaddingLeft = UDim.new(0,6)

local actionBtn = Instance.new("TextButton", row)
actionBtn.Size = UDim2.new(0,106,1,0)
actionBtn.Position = UDim2.new(1,0,0,0)
actionBtn.AnchorPoint = Vector2.new(1,0)
actionBtn.BackgroundColor3 = Color3.fromRGB(60,150,255)
actionBtn.Text = "Fling"
actionBtn.Font = Enum.Font.GothamBold
actionBtn.TextSize = 13
actionBtn.TextColor3 = Color3.fromRGB(255,255,255)
Instance.new("UICorner", actionBtn).CornerRadius = UDim.new(0,6)
Instance.new("UIStroke", actionBtn).Color = Color3.fromRGB(38,105,190)

-- Status label
local statusLabel = Instance.new("TextLabel", mainFrame)
statusLabel.Size = UDim2.new(1,-padding*2,0,20)
statusLabel.Position = UDim2.new(0,padding,0.7,0)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Ready"
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 11
statusLabel.TextColor3 = Color3.fromRGB(200,200,200)
statusLabel.TextXAlignment = Enum.TextXAlignment.Left

-- ===== Dragging (mouse + touch) =====
local dragging = false
local dragInput, dragStartPos, frameStartPos

local function updateDrag(input)
    if dragging and dragInput and frameStartPos and dragStartPos then
        local delta = input.Position - dragStartPos
        mainFrame.Position = UDim2.new(
            frameStartPos.X.Scale, frameStartPos.X.Offset + delta.X,
            frameStartPos.Y.Scale, frameStartPos.Y.Offset + delta.Y
        )
    end
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 
       or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStartPos = input.Position
        frameStartPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement 
       or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

RunService.RenderStepped:Connect(function()
    if dragging and dragInput then
        updateDrag(dragInput)
    end
end)

-- RightAlt toggle
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.RightAlt then
        screenGui.Enabled = not screenGui.Enabled
    end
end)

-- ===== Dragging (mouse + touch) =====
local dragging = false
local dragInput, dragStartPos, frameStartPos

local function updateDrag(input)
    if dragging and dragInput and frameStartPos and dragStartPos then
        local delta = input.Position - dragStartPos
        mainFrame.Position = UDim2.new(
            frameStartPos.X.Scale, frameStartPos.X.Offset + delta.X,
            frameStartPos.Y.Scale, frameStartPos.Y.Offset + delta.Y
        )
    end
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 
       or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStartPos = input.Position
        frameStartPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement 
       or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

RunService.RenderStepped:Connect(function()
    if dragging and dragInput then
        updateDrag(dragInput)
    end
end)

-- RightAlt toggle
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.RightAlt then
        screenGui.Enabled = not screenGui.Enabled
    end
end)

-- Dragging
local dragging = false
local dragInput, dragStartPos, frameStartPos
titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStartPos = input.Position
        frameStartPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)
titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
RunService.RenderStepped:Connect(function()
    if dragging and dragInput and frameStartPos and dragStartPos then
        local delta = dragInput.Position - dragStartPos
        mainFrame.Position = UDim2.new(frameStartPos.X.Scale, frameStartPos.X.Offset + delta.X,
                                       frameStartPos.Y.Scale, frameStartPos.Y.Offset + delta.Y)
    end
end)

-- RightAlt toggle
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.RightAlt then
        screenGui.Enabled = not screenGui.Enabled
    end
end)

-- ===== Fling logic =====
local active = false
local flingTask

local function stopFling()
    active = false
    if flingTask then flingTask = nil end

    actionBtn.Text = "Fling"
    actionBtn.BackgroundColor3 = Color3.fromRGB(60,150,255)
    actionBtn.TextColor3 = Color3.fromRGB(255,255,255)
    statusLabel.Text = "Ready"
    local myHRP = safeFindHRP(LocalPlayer.Character)
    if myHRP then
        setAssemblyLinearVelocity(myHRP, Vector3.zero)
        setAssemblyAngularVelocity(myHRP, Vector3.zero)
    end
end

local function flingTarget(targetPlayer)
    local myChar = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local myHRP = safeFindHRP(myChar)
    local targetHRP = safeFindHRP(targetPlayer.Character)
    if not (myHRP and targetHRP) then
        statusLabel.Text = "Target not available"
        return
    end
    -- Teleport behind
    local behindPos = targetHRP.Position - targetHRP.CFrame.LookVector * BEHIND_DISTANCE
    local desired = CFrame.lookAt(behindPos + Vector3.new(0, SAFE_VERTICAL_OFFSET,0), targetHRP.Position)
    pcall(function() myChar:PivotTo(desired) end)

    setAssemblyAngularVelocity(myHRP, SPIN)
    statusLabel.Text = ("Ramming %s..."):format(targetPlayer.Name)
    active = true
    while active and targetHRP.Parent do
        local dir = (targetHRP.Position - myHRP.Position).Unit
        setAssemblyLinearVelocity(myHRP, dir * RAM_FORCE)
        RunService.Heartbeat:Wait()
    end
    setAssemblyLinearVelocity(myHRP, Vector3.zero)
    setAssemblyAngularVelocity(myHRP, Vector3.zero)
    stopFling()
end

local function startFlingFor(query)
    if active then stopFling() return end
    local target = getTargetByQuery(query)
    if not target then statusLabel.Text = "Target not found" return end
    if target == LocalPlayer then statusLabel.Text = "Can't target yourself" return end

    actionBtn.Text = "Stop"
    actionBtn.BackgroundColor3 = Color3.fromRGB(220,60,60)
    actionBtn.TextColor3 = Color3.fromRGB(255,255,255)

    statusLabel.Text = ("Locking on %s..."):format(target.Name)
    flingTask = task.spawn(function()
        pcall(function() flingTarget(target) end)
    end)
end

-- Connect button & enter
actionBtn.MouseButton1Click:Connect(function()
    startFlingFor(inputBox.Text or "")
end)

inputBox.FocusLost:Connect(function(enter)
    if enter then
        startFlingFor(inputBox.Text or "")
    end
end)

LocalPlayer.CharacterRemoving:Connect(stopFling)
Players.PlayerRemoving:Connect(stopFling)
